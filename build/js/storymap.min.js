function Dialog(e){const t={slideDeletePopupTemplateId:"#dialog_delete_slide",slideDeleteMessageTextId:"#msg"};this.options=$.extend(!0,{},t,e),this.addEvents()}Dialog.prototype.addEvents=function(){const e=this;$(`${e.options.slideDeletePopupTemplateId} .btn-default`).on("click",()=>{e.hide(),$(e).trigger("Dialog:accept")}),$(`${e.options.slideDeletePopupTemplateId} .close`).on("click",()=>{e.hide(),$(e).trigger("Dialog:cancel")}),$(`${e.options.slideDeletePopupTemplateId} .btn-danger`).on("click",()=>{e.hide(),$(e).trigger("Dialog:cancel")})},Dialog.prototype.setMessage=function(e){$(this.options.slideDeleteMessageTextId).html(`<span>${e}</span>`)},Dialog.prototype.show=function(){$(this.options.slideDeletePopupTemplateId).show()},Dialog.prototype.hide=function(){$(this.options.slideDeletePopupTemplateId).hide()};
function SlideBar(e){const i={maxSlides:10,slideIconRegex:/^slide-icon-\w+$/,slidesContainerId:"#slidesContainer",slideListId:"#slideList",addSlideButton:"#storymap_add_slide"};this.options=$.extend(!0,{},i,e),this.addEvents()}SlideBar.prototype.addEvents=function(){const e=this;$(e.options.addSlideButton).click(()=>{$(e).trigger("SlideBar:addSlidePressed")})},SlideBar.prototype.addSlide=function(){const e=this,i=new SlideIcon;i.appendTo(this.options.slideListId),$(i).on("Slide:deletePressed",(i,d)=>{$(e).trigger("SlideBar:deleteSlidePressed",[d])}),$(i).on("Slide:selected",(i,d)=>{$(e).trigger("SlideBar:slideSelected",[d])}),$(this.options.slidesContainerId).scrollTop(Math.max(0,$(this.options.slideListId).height()-$(this.options.slideListId).parent().height())),i.clicked()},SlideBar.prototype.removeSlide=function(e){$(`${this.options.slideListId} li:nth-child(${e+1})`).remove()};
function SlideIcon(e){const t={text:"",templateId:"#storymap_slide_template",slideClass:".slide"};this.options=$.extend(!0,{},t,e),this.template=_.template($(this.options.templateId).html().trim()),this.slideDOMElem=$(this.template(this.options)),this.deleteDOMElem=$('<a class="close" href="javascript:">&nbsp;</a>'),this.addEvents()}SlideIcon.prototype.addEvents=function(){const e=this;e.slideDOMElem.click(()=>{e.clicked()}),e.deleteDOMElem.click(()=>{e.deleteButtonPressed()})},SlideIcon.prototype.clicked=function(){const e=this,t=$(e.options.slideClass).index(e.slideDOMElem);return $(":focus").blur(),$(`${this.options.slideClass}.selected`).removeClass("selected"),$(e.slideDOMElem).addClass("selected"),$(e).trigger("Slide:selected",[t]),!1},SlideIcon.prototype.deleteButtonPressed=function(){const e=this,t=$(e.options.slideClass).index(e.slideDOMElem);$(e).trigger("Slide:deletePressed",[t])},SlideIcon.prototype.appendTo=function(e){this.slideDOMElem.appendTo(e),this.deleteDOMElem.appendTo(this.slideDOMElem)};
function SlideInfo(t,o){const i={urlLoadButtonId:"#storymap_load",urlClearButtonId:"#storymap_unload",infoButtonId:"#obrir_menu",saveSlideButtonId:"#storymap_save_slide",resetSlideButtonId:"#storymap_reset_slide",urlInputId:"#urlMap",titolInputId:"#headline",textInputId:"#summernote",iFrameId:"#instamapsMap",noURLId:"#noURLLoaded",iFrameContainerId:"#mapaFrame",dataContainerId:"#dataSection",defaultUrl:"https://www.instamaps.cat/geocatweb/visor.html?embed=1"};this.options=$.extend(!0,{},i,o),this.isDirty=!1,this.addEvents(),$(this.options.textInputId).summernote(),this.reset()}SlideInfo.prototype.addEvents=function(){const t=this;$(t.options.urlLoadButtonId).on("click",()=>{t.setURL()}),$(t.options.urlClearButtonId).on("click",()=>{$(t.options.urlInputId).val(""),$(t.options.iFrameId).hide(),$(t.options.noURLId).show()}),$(t.options.infoButtonId).on("click",()=>{$(t.options.iFrameContainerId).hasClass("expanded")?t.open():t.close()}),$(t.options.saveSlideButtonId).on("click",()=>{t.enableSaving(!1),$(t).trigger("SlideInfo:saveSlidePressed")}),$(t.options.resetSlideButtonId).on("click",()=>{t.reset()}),$(t.options.urlInputId).on("input",()=>{t.checkURL()}),$(t.options.titolInputId).on("input",()=>{t.checkTitol()}),$(t.options.textInputId).on("summernote.change",()=>{t.checkText()})},SlideInfo.prototype.checkURL=function(){const t=$(this.options.urlInputId).val();Utils.isValidURL(t)&&this.setDirty(!0)},SlideInfo.prototype.checkTitol=function(){const t=$(this.options.titolInputId).val();Utils.isNotEmpty(t)&&this.setDirty(!0)},SlideInfo.prototype.checkText=function(){const t=$(this.options.textInputId).summernote("code");Utils.isNotEmpty(t)&&this.setDirty(!0)},SlideInfo.prototype.setDirty=function(t){this.isDirty=t,this.enableSaving(t)},SlideInfo.prototype.setURL=function(){const t=this,o=$(t.options.urlInputId).val();Utils.isValidURL(o)?($(t.options.iFrameId).attr("src",o),$(this.options.noURLId).hide(),$(this.options.iFrameId).show()):$(t).trigger("SlideInfo:invalidURL")},SlideInfo.prototype.getURL=function(){return $(this.options.urlInputId).val()},SlideInfo.prototype.getTitol=function(){return $(this.options.titolInputId).val()},SlideInfo.prototype.getDescripcio=function(){return $(this.options.textInputId).summernote("code")},SlideInfo.prototype.reset=function(){$(this.options.iFrameId).hide(),$(this.options.noURLId).show(),$(this.options.urlInputId).val(""),$(this.options.titolInputId).val(""),$(this.options.textInputId).summernote("code","")},SlideInfo.prototype.setData=function(t,o,i){t&&""!==t?($(this.options.iFrameId).attr("src",t),$(this.options.noURLId).hide(),$(this.options.iFrameId).show()):($(this.options.iFrameId).hide(),$(this.options.noURLId).show()),$(this.options.urlInputId).val(t),$(this.options.titolInputId).val(o),$(this.options.textInputId).summernote("code",i)},SlideInfo.prototype.close=function(){$(this.options.iFrameContainerId).removeClass("collapsed"),$(this.options.iFrameContainerId).addClass("expanded"),$(this.options.dataContainerId).hide()},SlideInfo.prototype.open=function(){$(this.options.iFrameContainerId).removeClass("expanded"),$(this.options.iFrameContainerId).addClass("collapsed"),$(this.options.dataContainerId).show()},SlideInfo.prototype.enableSaving=function(t){$(this.options.saveSlideButtonId).prop("disabled",!t)};
function StoryMap(e){const i={language:"en",maxSlides:10,strings:{en:{maxSlides:"Maximum number of slides reached"},ca:{maxSlides:"Màxim número de slides assolit"},es:{maxSlides:"Has llegado al número máximo de slides"}}};this.options=$.extend(!0,{},i,e),this.currentDeletionIndex=-1,this.currentSelectedIndex=-1,this.slides=[],this.idEditor="",this.idStoryMap="",this.slideBar=new SlideBar,this.slideInfoPanel=new SlideInfo,this.deleteDialog=new Dialog,this.server=new StoryMapServer,this.addEvents(),this._addSlide()}StoryMap.prototype.addEvents=function(){const e=this;$(e.slideInfoPanel).on("SlideInfo:saveSlidePressed",()=>{e.saveSlide()}),$(e.slideBar).on("SlideBar:slideSelected",(i,t)=>{this.currentSelectedIndex=t,e._slideSelected(t)}),$(e.slideBar).on("SlideBar:addSlidePressed",()=>{e._addSlide()}),$(e.slideBar).on("SlideBar:deleteSlidePressed",(i,t)=>{e.currentDeletionIndex=t,e._slideDeletePressed(t)}),$(e.deleteDialog).on("Dialog:accept",()=>{e._slideDeleteConfirmed(),this.currentSelectedIndex===this.currentDeletionIndex&&this.slideInfoPanel.clear(),e.currentDeletionIndex=-1}),$(e.deleteDialog).on("Dialog:cancel",()=>{e.currentDeletionIndex=-1})},StoryMap.prototype.saveSlide=function(){const e={id:this.slides.length,url_mapa:this.slideInfoPanel.getURL(),titol:this.slideInfoPanel.getTitol(),descripcio:this.slideInfoPanel.getDescripcio()};this.slides.push(e),this.save().then(()=>{this.slideInfoPanel.reset()})},StoryMap.prototype._addSlide=function(){const e=this,i=$.extend(!0,{},e.options.slideData);e.slides.length===e.options.maxSlides?alert(e.options.strings[e.options.language].maxSlides):(e.slides.push(i),this.slideBar.addSlide(),$(e).trigger("StoryMap:changed"))},StoryMap.prototype._slideSelected=function(e){if(null!=this.slides){const i=this.slides[e];this.slideInfoPanel.setData(i.url_mapa,i.titol,i.descripcio),this.slideInfoPanel.open()}},StoryMap.prototype._slideDeletePressed=function(e){const i=this.slides[e].titol||"(untitled)";this.deleteDialog.setMessage(`Delete "${i}" slide?`),this.deleteDialog.show()},StoryMap.prototype.save=function(){const e=$.Deferred();return""!==this.idStoryMap?""===this.idEditor?this.server.editMapSlides(this.idStoryMap).then(function(i){this.idEditor=i.id_editor,this.server.updateMapSlides(this.idEditor,this.idStoryMap,JSON.stringify(this.slides)).then(()=>{e.resolve()},()=>{e.reject()})},()=>{e.reject()}):this.server.updateMapSlides(this.idEditor,this.idStoryMap,JSON.stringify(this.slides)).then(()=>{e.resolve()},()=>{e.reject()}):this.server.newMapSlides(JSON.stringify(this.slides)).then(i=>{this.idStoryMap=i.id,this.idEditor=i.id_editor,e.resolve()},()=>{e.reject()}),e.promise()},StoryMap.prototype.load=function(e){this.idEditor=e,this.server.editMapSlides(e).then(e=>{this.slides=JSON.parse(e.slides)})},StoryMap.prototype._slideDeleteConfirmed=function(){const e=this;e.slides.splice(this.currentDeletionIndex,1),e.slideBar.removeSlide(this.currentDeletionIndex)};
function StoryMapServer(t){const e={urlStoryMap:"http://172.70.1.32/storymaps/"};this.options=$.extend(!0,{},e,t)}StoryMapServer.prototype.getMapSlides=function(t){return $.ajax({method:"GET",url:this.options.urlStoryMap+t})},StoryMapServer.prototype.editMapSlides=function(t){return $.ajax({method:"GET",url:`${this.options.urlStoryMap}edit/${t}`,async:!1}).responseText},StoryMapServer.prototype.newMapSlides=function(t){return $.ajax({method:"POST",url:`${this.options.urlStoryMap}edit/`,dataType:"json",data:{id:0,id_editor:0,slides:t}})},StoryMapServer.prototype.updateMapSlides=function(t,e,o){return $.ajax({method:"PUT",url:`${this.options.urlStoryMap}edit/${t}`,dataType:"json",data:{id:e,id_editor:t,slides:o}})},StoryMapServer.prototype.deleteMapSlides=function(t,e){$.ajax({method:"DELETE",url:`${this.options.urlStoryMap}edit/${t}/${e}`,contentType:"application/json"}).done(()=>{})};
const Utils={isValidURL(t){const s=/https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/gi;return new RegExp(s).test(t)},isNotEmpty:t=>""!==t.trim()};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRpYWxvZy5qcyIsInNsaWRlQmFyLmpzIiwic2xpZGVJY29uLmpzIiwic2xpZGVJbmZvLmpzIiwic3RvcnlNYXAuanMiLCJzdG9yeU1hcFNlcnZlci5qcyIsInV0aWxzLmpzIl0sIm5hbWVzIjpbIkRpYWxvZyIsIm9wdGlvbnMiLCJfZGVmYXVsdE9wdGlvbnMiLCJzbGlkZURlbGV0ZVBvcHVwVGVtcGxhdGVJZCIsInNsaWRlRGVsZXRlTWVzc2FnZVRleHRJZCIsInRoaXMiLCIkIiwiZXh0ZW5kIiwiYWRkRXZlbnRzIiwicHJvdG90eXBlIiwic2VsZiIsIm9uIiwiaGlkZSIsInRyaWdnZXIiLCJzZXRNZXNzYWdlIiwibXNnIiwiaHRtbCIsInNob3ciLCJTbGlkZUJhciIsIm1heFNsaWRlcyIsInNsaWRlSWNvblJlZ2V4Iiwic2xpZGVzQ29udGFpbmVySWQiLCJzbGlkZUxpc3RJZCIsImFkZFNsaWRlQnV0dG9uIiwiY2xpY2siLCJhZGRTbGlkZSIsInNsaWRlIiwiU2xpZGVJY29uIiwiYXBwZW5kVG8iLCJldmVudCIsImlkIiwic2Nyb2xsVG9wIiwiTWF0aCIsIm1heCIsImhlaWdodCIsInBhcmVudCIsImNsaWNrZWQiLCJyZW1vdmVTbGlkZSIsInJlbW92ZSIsInRleHQiLCJ0ZW1wbGF0ZUlkIiwic2xpZGVDbGFzcyIsInRlbXBsYXRlIiwiXyIsInRyaW0iLCJzbGlkZURPTUVsZW0iLCJkZWxldGVET01FbGVtIiwiZGVsZXRlQnV0dG9uUHJlc3NlZCIsImN1cnJlbnRTbGlkZUluZGV4IiwiaW5kZXgiLCJibHVyIiwicmVtb3ZlQ2xhc3MiLCJhZGRDbGFzcyIsIlNsaWRlSW5mbyIsInVybExvYWRCdXR0b25JZCIsInVybENsZWFyQnV0dG9uSWQiLCJpbmZvQnV0dG9uSWQiLCJzYXZlU2xpZGVCdXR0b25JZCIsInJlc2V0U2xpZGVCdXR0b25JZCIsInVybElucHV0SWQiLCJ0aXRvbElucHV0SWQiLCJ0ZXh0SW5wdXRJZCIsImlGcmFtZUlkIiwibm9VUkxJZCIsImlGcmFtZUNvbnRhaW5lcklkIiwiZGF0YUNvbnRhaW5lcklkIiwiZGVmYXVsdFVybCIsImlzRGlydHkiLCJzdW1tZXJub3RlIiwicmVzZXQiLCJzZXRVUkwiLCJ2YWwiLCJoYXNDbGFzcyIsIm9wZW4iLCJjbG9zZSIsImVuYWJsZVNhdmluZyIsImNoZWNrVVJMIiwiY2hlY2tUaXRvbCIsImNoZWNrVGV4dCIsInVybCIsIlV0aWxzIiwiaXNWYWxpZFVSTCIsInNldERpcnR5IiwiaXNOb3RFbXB0eSIsImF0dHIiLCJnZXRVUkwiLCJnZXRUaXRvbCIsImdldERlc2NyaXBjaW8iLCJzZXREYXRhIiwidGl0b2wiLCJkZXNjcmlwY2lvIiwic2hvdWxkRW5hYmxlIiwicHJvcCIsIlN0b3J5TWFwIiwibGFuZ3VhZ2UiLCJzdHJpbmdzIiwiZW4iLCJjYSIsImVzIiwiY3VycmVudERlbGV0aW9uSW5kZXgiLCJjdXJyZW50U2VsZWN0ZWRJbmRleCIsInNsaWRlcyIsImlkRWRpdG9yIiwiaWRTdG9yeU1hcCIsInNsaWRlQmFyIiwic2xpZGVJbmZvUGFuZWwiLCJkZWxldGVEaWFsb2ciLCJzZXJ2ZXIiLCJTdG9yeU1hcFNlcnZlciIsIl9hZGRTbGlkZSIsInNhdmVTbGlkZSIsIl9zbGlkZVNlbGVjdGVkIiwiX3NsaWRlRGVsZXRlUHJlc3NlZCIsIl9zbGlkZURlbGV0ZUNvbmZpcm1lZCIsImNsZWFyIiwibGVuZ3RoIiwidXJsX21hcGEiLCJwdXNoIiwic2F2ZSIsInRoZW4iLCJkZWZhdWx0RGF0YSIsInNsaWRlRGF0YSIsImFsZXJ0IiwiY3VycmVudFNsaWRlIiwic2xpZGVUaXRsZSIsImRlZmVycmVkIiwiRGVmZXJyZWQiLCJlZGl0TWFwU2xpZGVzIiwicmVzdWx0cyIsImlkX2VkaXRvciIsInVwZGF0ZU1hcFNsaWRlcyIsIkpTT04iLCJzdHJpbmdpZnkiLCJyZXNvbHZlIiwicmVqZWN0IiwibmV3TWFwU2xpZGVzIiwicHJvbWlzZSIsImxvYWQiLCJwYXJzZSIsInNwbGljZSIsInVybFN0b3J5TWFwIiwiZ2V0TWFwU2xpZGVzIiwiaWRNYXBhIiwiYWpheCIsIm1ldGhvZCIsImlkTWFwYUVkaXRpbmciLCJhc3luYyIsInJlc3BvbnNlVGV4dCIsImpzb25TbGlkZXMiLCJkYXRhVHlwZSIsImRhdGEiLCJkZWxldGVNYXBTbGlkZXMiLCJjb250ZW50VHlwZSIsImRvbmUiLCJbb2JqZWN0IE9iamVjdF0iLCJleHByZXNzaW9uIiwiUmVnRXhwIiwidGVzdCJdLCJtYXBwaW5ncyI6IkFBRUEsU0FBU0EsT0FBT0MsR0FFZixNQUFNQyxHQUNMQywyQkFBNEIsdUJBQzVCQyx5QkFBMEIsUUFHM0JDLEtBQUtKLFFBQVVLLEVBQUVDLFFBQU8sS0FBVUwsRUFBaUJELEdBRW5ESSxLQUFLRyxZQUlOUixPQUFPUyxVQUFVRCxVQUFZLFdBRTVCLE1BQU1FLEVBQU9MLEtBRWJDLEtBQUtJLEVBQUtULFFBQVFFLDJDQUEyQ1EsR0FBRyxRQUFTLEtBRXhFRCxFQUFLRSxPQUNMTixFQUFFSSxHQUFNRyxRQUFRLG1CQUlqQlAsS0FBS0ksRUFBS1QsUUFBUUUscUNBQXFDUSxHQUFHLFFBQVMsS0FFbEVELEVBQUtFLE9BQ0xOLEVBQUVJLEdBQU1HLFFBQVEsbUJBSWpCUCxLQUFLSSxFQUFLVCxRQUFRRSwwQ0FBMENRLEdBQUcsUUFBUyxLQUV2RUQsRUFBS0UsT0FDTE4sRUFBRUksR0FBTUcsUUFBUSxvQkFNbEJiLE9BQU9TLFVBQVVLLFdBQWEsU0FBVUMsR0FFdkNULEVBQUVELEtBQUtKLFFBQVFHLDBCQUEwQlksY0FBY0QsYUFJeERmLE9BQU9TLFVBQVVRLEtBQU8sV0FFdkJYLEVBQUVELEtBQUtKLFFBQVFFLDRCQUE0QmMsUUFJNUNqQixPQUFPUyxVQUFVRyxLQUFPLFdBRXZCTixFQUFFRCxLQUFLSixRQUFRRSw0QkFBNEJTO0FDdEQ1QyxTQUFTTSxTQUFTakIsR0FFakIsTUFBTUMsR0FDTGlCLFVBQVcsR0FDWEMsZUFBZ0IsbUJBQ2hCQyxrQkFBbUIsbUJBQ25CQyxZQUFhLGFBQ2JDLGVBQWdCLHVCQUlqQmxCLEtBQUtKLFFBQVVLLEVBQUVD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YSxHQUdqRCxPQUFPOUksRUFBRXlJLE1BRVJDLE9BQVEsT0FDUmpFLE9BQVExRSxLQUFLSixRQUFRMkksbUJBQ3JCUyxTQUFVLE9BQ1ZDLE1BQVF4SCxHQUFJLEVBQUdtRyxVQUFXLEVBQUc1QixPQUFRK0MsTUFPdkN4QyxlQUFlbkcsVUFBVXlILGdCQUFrQixTQUFVZSxFQUFlSCxFQUFRTSxHQUUzRSxPQUFPOUksRUFBRXlJLE1BRVJDLE9BQVEsTUFDUmpFLE9BQVExRSxLQUFLSixRQUFRMkksbUJBQW1CSyxJQUN4Q0ksU0FBVSxPQUNWQyxNQUFReEgsR0FBSWdILEVBQVFiLFVBQVdnQixFQUFlNUMsT0FBUStDLE1BTXhEeEMsZUFBZW5HLFVBQVU4SSxnQkFBa0IsU0FBVU4sRUFBZUgsR0FFbkV4SSxFQUFFeUksTUFFREMsT0FBUSxTQUNSakUsT0FBUTFFLEtBQUtKLFFBQVEySSxtQkFBbUJLLEtBQWlCSCxJQUN6RFUsWUFBYSxxQkFHWkMsS0FBSztBQzFFUixNQUFNekUsT0FFTDBFLFdBQVczRSxHQUVWLE1BQU00RSxFQUFhLGtHQUduQixPQUZjLElBQUlDLE9BQU9ELEdBRVpFLEtBQUs5RSxJQUluQkksV0FBVzVDLEdBRWMsS0FBaEJBLEVBQUtLIiwiZmlsZSI6InN0b3J5bWFwLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGdsb2JhbCAkKi9cblxuZnVuY3Rpb24gRGlhbG9nKG9wdGlvbnMpIHtcblxuXHRjb25zdCBfZGVmYXVsdE9wdGlvbnMgPSB7XG5cdFx0c2xpZGVEZWxldGVQb3B1cFRlbXBsYXRlSWQ6IFwiI2RpYWxvZ19kZWxldGVfc2xpZGVcIixcblx0XHRzbGlkZURlbGV0ZU1lc3NhZ2VUZXh0SWQ6IFwiI21zZ1wiLFxuXHR9O1xuXG5cdHRoaXMub3B0aW9ucyA9ICQuZXh0ZW5kKHRydWUsIHt9LCBfZGVmYXVsdE9wdGlvbnMsIG9wdGlvbnMpO1xuXG5cdHRoaXMuYWRkRXZlbnRzKCk7XG5cbn1cblxuRGlhbG9nLnByb3RvdHlwZS5hZGRFdmVudHMgPSBmdW5jdGlvbiAoKSB7XG5cblx0Y29uc3Qgc2VsZiA9IHRoaXM7XG5cblx0JChgJHtzZWxmLm9wdGlvbnMuc2xpZGVEZWxldGVQb3B1cFRlbXBsYXRlSWR9IC5idG4tZGVmYXVsdGApLm9uKFwiY2xpY2tcIiwgKCkgPT4ge1xuXG5cdFx0c2VsZi5oaWRlKCk7XG5cdFx0JChzZWxmKS50cmlnZ2VyKFwiRGlhbG9nOmFjY2VwdFwiKTtcblxuXHR9KTtcblxuXHQkKGAke3NlbGYub3B0aW9ucy5zbGlkZURlbGV0ZVBvcHVwVGVtcGxhdGVJZH0gLmNsb3NlYCkub24oXCJjbGlja1wiLCAoKSA9PiB7XG5cblx0XHRzZWxmLmhpZGUoKTtcblx0XHQkKHNlbGYpLnRyaWdnZXIoXCJEaWFsb2c6Y2FuY2VsXCIpO1xuXG5cdH0pO1xuXG5cdCQoYCR7c2VsZi5vcHRpb25zLnNsaWRlRGVsZXRlUG9wdXBUZW1wbGF0ZUlkfSAuYnRuLWRhbmdlcmApLm9uKFwiY2xpY2tcIiwgKCkgPT4ge1xuXG5cdFx0c2VsZi5oaWRlKCk7XG5cdFx0JChzZWxmKS50cmlnZ2VyKFwiRGlhbG9nOmNhbmNlbFwiKTtcblxuXHR9KTtcblxufTtcblxuRGlhbG9nLnByb3RvdHlwZS5zZXRNZXNzYWdlID0gZnVuY3Rpb24gKG1zZykge1xuXG5cdCQodGhpcy5vcHRpb25zLnNsaWRlRGVsZXRlTWVzc2FnZVRleHRJZCkuaHRtbChgPHNwYW4+JHttc2d9PC9zcGFuPmApO1xuXG59O1xuXG5EaWFsb2cucHJvdG90eXBlLnNob3cgPSBmdW5jdGlvbiAoKSB7XG5cblx0JCh0aGlzLm9wdGlvbnMuc2xpZGVEZWxldGVQb3B1cFRlbXBsYXRlSWQpLnNob3coKTtcblxufTtcblxuRGlhbG9nLnByb3RvdHlwZS5oaWRlID0gZnVuY3Rpb24gKCkge1xuXG5cdCQodGhpcy5vcHRpb25zLnNsaWRlRGVsZXRlUG9wdXBUZW1wbGF0ZUlkKS5oaWRlKCk7XG5cbn07XG4iLCIvKiBnbG9iYWwgJCwgU2xpZGVJY29uKi9cblxuZnVuY3Rpb24gU2xpZGVCYXIob3B0aW9ucykge1xuXG5cdGNvbnN0IF9kZWZhdWx0T3B0aW9ucyA9IHtcblx0XHRtYXhTbGlkZXM6IDEwLFxuXHRcdHNsaWRlSWNvblJlZ2V4OiAvXnNsaWRlLWljb24tXFx3KyQvLFxuXHRcdHNsaWRlc0NvbnRhaW5lcklkOiBcIiNzbGlkZXNDb250YWluZXJcIixcblx0XHRzbGlkZUxpc3RJZDogXCIjc2xpZGVMaXN0XCIsXG5cdFx0YWRkU2xpZGVCdXR0b246IFwiI3N0b3J5bWFwX2FkZF9zbGlkZVwiLFxuXG5cdH07XG5cblx0dGhpcy5vcHRpb25zID0gJC5leHRlbmQodHJ1ZSwge30sIF9kZWZhdWx0T3B0aW9ucywgb3B0aW9ucyk7XG5cblx0dGhpcy5hZGRFdmVudHMoKTtcblxufVxuXG5TbGlkZUJhci5wcm90b3R5cGUuYWRkRXZlbnRzID0gZnVuY3Rpb24gKCkge1xuXG5cdGNvbnN0IHNlbGYgPSB0aGlzO1xuXG5cdCQoc2VsZi5vcHRpb25zLmFkZFNsaWRlQnV0dG9uKS5jbGljaygoKSA9PiB7XG5cblx0XHQkKHNlbGYpLnRyaWdnZXIoXCJTbGlkZUJhcjphZGRTbGlkZVByZXNzZWRcIik7XG5cblx0fSk7XG5cbn07XG5cblNsaWRlQmFyLnByb3RvdHlwZS5hZGRTbGlkZSA9IGZ1bmN0aW9uICgpIHtcblxuXHRjb25zdCBzZWxmID0gdGhpcztcblxuXHRjb25zdCBzbGlkZSA9IG5ldyBTbGlkZUljb24oKTtcblx0c2xpZGUuYXBwZW5kVG8odGhpcy5vcHRpb25zLnNsaWRlTGlzdElkKTtcblxuXHQkKHNsaWRlKS5vbihcIlNsaWRlOmRlbGV0ZVByZXNzZWRcIiwgKGV2ZW50LCBpZCkgPT4ge1xuXG5cdFx0JChzZWxmKS50cmlnZ2VyKFwiU2xpZGVCYXI6ZGVsZXRlU2xpZGVQcmVzc2VkXCIsIFtpZF0pO1xuXG5cdH0pO1xuXG5cdCQoc2xpZGUpLm9uKFwiU2xpZGU6c2VsZWN0ZWRcIiwgKGV2ZW50LCBpZCkgPT4ge1xuXG5cdFx0JChzZWxmKS50cmlnZ2VyKFwiU2xpZGVCYXI6c2xpZGVTZWxlY3RlZFwiLCBbaWRdKTtcblxuXHR9KTtcblxuXG5cdCQodGhpcy5vcHRpb25zLnNsaWRlc0NvbnRhaW5lcklkKS5zY3JvbGxUb3AoTWF0aC5tYXgoMCwgJCh0aGlzLm9wdGlvbnMuc2xpZGVMaXN0SWQpLmhlaWdodCgpIC1cblx0XHQkKHRoaXMub3B0aW9ucy5zbGlkZUxpc3RJZCkucGFyZW50KCkuaGVpZ2h0KCkpKTtcblx0c2xpZGUuY2xpY2tlZCgpO1xuXG59O1xuXG5TbGlkZUJhci5wcm90b3R5cGUucmVtb3ZlU2xpZGUgPSBmdW5jdGlvbiAoaWQpIHtcblxuXHQkKGAke3RoaXMub3B0aW9ucy5zbGlkZUxpc3RJZH0gbGk6bnRoLWNoaWxkKCR7aWQgKyAxfSlgKS5yZW1vdmUoKTtcblxufTtcbiIsIi8qIGdsb2JhbCAkLCBfKi9cblxuZnVuY3Rpb24gU2xpZGVJY29uKG9wdGlvbnMpIHtcblxuXHRjb25zdCBfZGVmYXVsdE9wdGlvbnMgPSB7XG5cblx0XHR0ZXh0OiBcIlwiLFxuXHRcdHRlbXBsYXRlSWQ6IFwiI3N0b3J5bWFwX3NsaWRlX3RlbXBsYXRlXCIsXG5cdFx0c2xpZGVDbGFzczogXCIuc2xpZGVcIixcblxuXHR9O1xuXG5cdHRoaXMub3B0aW9ucyA9ICQuZXh0ZW5kKHRydWUsIHt9LCBfZGVmYXVsdE9wdGlvbnMsIG9wdGlvbnMpO1xuXG5cdHRoaXMudGVtcGxhdGUgPSBfLnRlbXBsYXRlKCQodGhpcy5vcHRpb25zLnRlbXBsYXRlSWQpLmh0bWwoKS50cmltKCkpO1xuXHR0aGlzLnNsaWRlRE9NRWxlbSA9ICQodGhpcy50ZW1wbGF0ZSh0aGlzLm9wdGlvbnMpKTtcblx0dGhpcy5kZWxldGVET01FbGVtID0gJChcIjxhIGNsYXNzPVxcXCJjbG9zZVxcXCIgaHJlZj1cXFwiamF2YXNjcmlwdDpcXFwiPiZuYnNwOzwvYT5cIik7XG5cblx0dGhpcy5hZGRFdmVudHMoKTtcblxufVxuXG5TbGlkZUljb24ucHJvdG90eXBlLmFkZEV2ZW50cyA9IGZ1bmN0aW9uICgpIHtcblxuXHRjb25zdCBzZWxmID0gdGhpcztcblxuXHRzZWxmLnNsaWRlRE9NRWxlbS5jbGljaygoKSA9PiB7XG5cblx0XHRzZWxmLmNsaWNrZWQoKTtcblxuXHR9KTtcblxuXHRzZWxmLmRlbGV0ZURPTUVsZW0uY2xpY2soKCkgPT4ge1xuXG5cdFx0c2VsZi5kZWxldGVCdXR0b25QcmVzc2VkKCk7XG5cblx0fSk7XG5cbn07XG5cblNsaWRlSWNvbi5wcm90b3R5cGUuY2xpY2tlZCA9IGZ1bmN0aW9uICgpIHtcblxuXHRjb25zdCBzZWxmID0gdGhpcztcblxuXHRjb25zdCBjdXJyZW50U2xpZGVJbmRleCA9ICQoc2VsZi5vcHRpb25zLnNsaWRlQ2xhc3MpLmluZGV4KHNlbGYuc2xpZGVET01FbGVtKTtcblx0JChcIjpmb2N1c1wiKS5ibHVyKCk7IC8vIGZvcmNlIGNoYW5nZSBldmVudCFcblxuXHQkKGAke3RoaXMub3B0aW9ucy5zbGlkZUNsYXNzfS5zZWxlY3RlZGApLnJlbW92ZUNsYXNzKFwic2VsZWN0ZWRcIik7XG5cdCQoc2VsZi5zbGlkZURPTUVsZW0pLmFkZENsYXNzKFwic2VsZWN0ZWRcIik7XG5cblx0JChzZWxmKS50cmlnZ2VyKFwiU2xpZGU6c2VsZWN0ZWRcIiwgW2N1cnJlbnRTbGlkZUluZGV4XSk7XG5cblx0cmV0dXJuIGZhbHNlO1xuXG59O1xuXG5TbGlkZUljb24ucHJvdG90eXBlLmRlbGV0ZUJ1dHRvblByZXNzZWQgPSBmdW5jdGlvbiAoKSB7XG5cblx0Y29uc3Qgc2VsZiA9IHRoaXM7XG5cblx0Y29uc3QgY3VycmVudFNsaWRlSW5kZXggPSAkKHNlbGYub3B0aW9ucy5zbGlkZUNsYXNzKS5pbmRleChzZWxmLnNsaWRlRE9NRWxlbSk7XG5cdCQoc2VsZikudHJpZ2dlcihcIlNsaWRlOmRlbGV0ZVByZXNzZWRcIiwgW2N1cnJlbnRTbGlkZUluZGV4XSk7XG5cbn07XG5cblNsaWRlSWNvbi5wcm90b3R5cGUuYXBwZW5kVG8gPSBmdW5jdGlvbiAoaWQpIHtcblxuXHR0aGlzLnNsaWRlRE9NRWxlbS5hcHBlbmRUbyhpZCk7XG5cdHRoaXMuZGVsZXRlRE9NRWxlbS5hcHBlbmRUbyh0aGlzLnNsaWRlRE9NRWxlbSk7XG5cbn07XG4iLCIvKiBnbG9iYWwgVXRpbHMsICQqL1xuXG5mdW5jdGlvbiBTbGlkZUluZm8oaW5kZXgsIG9wdGlvbnMpIHtcblxuXHRjb25zdCBfZGVmYXVsdE9wdGlvbnMgPSB7XG5cblx0XHR1cmxMb2FkQnV0dG9uSWQ6IFwiI3N0b3J5bWFwX2xvYWRcIixcblx0XHR1cmxDbGVhckJ1dHRvbklkOiBcIiNzdG9yeW1hcF91bmxvYWRcIixcblx0XHRpbmZvQnV0dG9uSWQ6IFwiI29icmlyX21lbnVcIixcblx0XHRzYXZlU2xpZGVCdXR0b25JZDogXCIjc3RvcnltYXBfc2F2ZV9zbGlkZVwiLFxuXHRcdHJlc2V0U2xpZGVCdXR0b25JZDogXCIjc3RvcnltYXBfcmVzZXRfc2xpZGVcIixcblx0XHR1cmxJbnB1dElkOiBcIiN1cmxNYXBcIixcblx0XHR0aXRvbElucHV0SWQ6IFwiI2hlYWRsaW5lXCIsXG5cdFx0dGV4dElucHV0SWQ6IFwiI3N1bW1lcm5vdGVcIixcblx0XHRpRnJhbWVJZDogXCIjaW5zdGFtYXBzTWFwXCIsXG5cdFx0bm9VUkxJZDogXCIjbm9VUkxMb2FkZWRcIixcblx0XHRpRnJhbWVDb250YWluZXJJZDogXCIjbWFwYUZyYW1lXCIsXG5cdFx0ZGF0YUNvbnRhaW5lcklkOiBcIiNkYXRhU2VjdGlvblwiLFxuXHRcdGRlZmF1bHRVcmw6IFwiaHR0cHM6Ly93d3cuaW5zdGFtYXBzLmNhdC9nZW9jYXR3ZWIvdmlzb3IuaHRtbD9lbWJlZD0xXCIsXG5cblx0fTtcblxuXHR0aGlzLm9wdGlvbnMgPSAkLmV4dGVuZCh0cnVlLCB7fSwgX2RlZmF1bHRPcHRpb25zLCBvcHRpb25zKTtcblx0dGhpcy5pc0RpcnR5ID0gZmFsc2U7XG5cblx0dGhpcy5hZGRFdmVudHMoKTtcblxuXHQkKHRoaXMub3B0aW9ucy50ZXh0SW5wdXRJZCkuc3VtbWVybm90ZSgpO1xuXHR0aGlzLnJlc2V0KCk7XG5cbn1cblxuU2xpZGVJbmZvLnByb3RvdHlwZS5hZGRFdmVudHMgPSBmdW5jdGlvbiAoKSB7XG5cblx0Y29uc3Qgc2VsZiA9IHRoaXM7XG5cblx0JChzZWxmLm9wdGlvbnMudXJsTG9hZEJ1dHRvbklkKS5vbihcImNsaWNrXCIsICgpID0+IHtcblxuXHRcdHNlbGYuc2V0VVJMKCk7XG5cblx0fSk7XG5cblx0JChzZWxmLm9wdGlvbnMudXJsQ2xlYXJCdXR0b25JZCkub24oXCJjbGlja1wiLCAoKSA9PiB7XG5cblx0XHQkKHNlbGYub3B0aW9ucy51cmxJbnB1dElkKS52YWwoXCJcIik7XG5cdFx0JChzZWxmLm9wdGlvbnMuaUZyYW1lSWQpLmhpZGUoKTtcblx0XHQkKHNlbGYub3B0aW9ucy5ub1VSTElkKS5zaG93KCk7XG5cblx0fSk7XG5cblx0JChzZWxmLm9wdGlvbnMuaW5mb0J1dHRvbklkKS5vbihcImNsaWNrXCIsICgpID0+IHtcblxuXHRcdGlmICgkKHNlbGYub3B0aW9ucy5pRnJhbWVDb250YWluZXJJZCkuaGFzQ2xhc3MoXCJleHBhbmRlZFwiKSkge1xuXG5cdFx0XHRzZWxmLm9wZW4oKTtcblxuXHRcdH0gZWxzZSB7XG5cblx0XHRcdHNlbGYuY2xvc2UoKTtcblxuXHRcdH1cblxuXHR9KTtcblxuXHQkKHNlbGYub3B0aW9ucy5zYXZlU2xpZGVCdXR0b25JZCkub24oXCJjbGlja1wiLCAoKSA9PiB7XG5cblx0XHRzZWxmLmVuYWJsZVNhdmluZyhmYWxzZSk7XG5cdFx0JChzZWxmKS50cmlnZ2VyKFwiU2xpZGVJbmZvOnNhdmVTbGlkZVByZXNzZWRcIik7XG5cblx0fSk7XG5cblx0JChzZWxmLm9wdGlvbnMucmVzZXRTbGlkZUJ1dHRvbklkKS5vbihcImNsaWNrXCIsICgpID0+IHtcblxuXHRcdHNlbGYucmVzZXQoKTtcblxuXHR9KTtcblxuXHQkKHNlbGYub3B0aW9ucy51cmxJbnB1dElkKS5vbihcImlucHV0XCIsICgpID0+IHtcblxuXHRcdHNlbGYuY2hlY2tVUkwoKTtcblxuXHR9KTtcblxuXHQkKHNlbGYub3B0aW9ucy50aXRvbElucHV0SWQpLm9uKFwiaW5wdXRcIiwgKCkgPT4ge1xuXG5cdFx0c2VsZi5jaGVja1RpdG9sKCk7XG5cblx0fSk7XG5cblx0JChzZWxmLm9wdGlvbnMudGV4dElucHV0SWQpLm9uKFwic3VtbWVybm90ZS5jaGFuZ2VcIiwgKCkgPT4ge1xuXG5cdFx0c2VsZi5jaGVja1RleHQoKTtcblxuXHR9KTtcblxufTtcblxuU2xpZGVJbmZvLnByb3RvdHlwZS5jaGVja1VSTCA9IGZ1bmN0aW9uICgpIHtcblxuXHRjb25zdCB1cmwgPSAkKHRoaXMub3B0aW9ucy51cmxJbnB1dElkKS52YWwoKTtcblxuXHRpZiAoVXRpbHMuaXNWYWxpZFVSTCh1cmwpKSB7XG5cblx0XHR0aGlzLnNldERpcnR5KHRydWUpO1xuXG5cdH1cblxufTtcblxuU2xpZGVJbmZvLnByb3RvdHlwZS5jaGVja1RpdG9sID0gZnVuY3Rpb24gKCkge1xuXG5cdGNvbnN0IHRleHQgPSAkKHRoaXMub3B0aW9ucy50aXRvbElucHV0SWQpLnZhbCgpO1xuXG5cdGlmIChVdGlscy5pc05vdEVtcHR5KHRleHQpKSB7XG5cblx0XHR0aGlzLnNldERpcnR5KHRydWUpO1xuXG5cdH1cblxufTtcblxuU2xpZGVJbmZvLnByb3RvdHlwZS5jaGVja1RleHQgPSBmdW5jdGlvbiAoKSB7XG5cblx0Y29uc3QgdGV4dCA9ICQodGhpcy5vcHRpb25zLnRleHRJbnB1dElkKS5zdW1tZXJub3RlKFwiY29kZVwiKTtcblxuXHRpZiAoVXRpbHMuaXNOb3RFbXB0eSh0ZXh0KSkge1xuXG5cdFx0dGhpcy5zZXREaXJ0eSh0cnVlKTtcblxuXHR9XG5cbn07XG5cblNsaWRlSW5mby5wcm90b3R5cGUuc2V0RGlydHkgPSBmdW5jdGlvbiAoaXNEaXJ0eSkge1xuXG5cdHRoaXMuaXNEaXJ0eSA9IGlzRGlydHk7XG5cdHRoaXMuZW5hYmxlU2F2aW5nKGlzRGlydHkpO1xuXG59O1xuXG5TbGlkZUluZm8ucHJvdG90eXBlLnNldFVSTCA9IGZ1bmN0aW9uICgpIHtcblxuXHRjb25zdCBzZWxmID0gdGhpcztcblxuXHRjb25zdCB1cmwgPSAkKHNlbGYub3B0aW9ucy51cmxJbnB1dElkKS52YWwoKTtcblx0aWYgKFV0aWxzLmlzVmFsaWRVUkwodXJsKSkge1xuXG5cdFx0JChzZWxmLm9wdGlvbnMuaUZyYW1lSWQpLmF0dHIoXCJzcmNcIiwgdXJsKTtcblx0XHQkKHRoaXMub3B0aW9ucy5ub1VSTElkKS5oaWRlKCk7XG5cdFx0JCh0aGlzLm9wdGlvbnMuaUZyYW1lSWQpLnNob3coKTtcblxuXHR9IGVsc2Uge1xuXG5cdFx0JChzZWxmKS50cmlnZ2VyKFwiU2xpZGVJbmZvOmludmFsaWRVUkxcIik7XG5cblx0fVxuXG59O1xuXG5TbGlkZUluZm8ucHJvdG90eXBlLmdldFVSTCA9IGZ1bmN0aW9uICgpIHtcblxuXHRyZXR1cm4gJCh0aGlzLm9wdGlvbnMudXJsSW5wdXRJZCkudmFsKCk7XG5cbn07XG5cblNsaWRlSW5mby5wcm90b3R5cGUuZ2V0VGl0b2wgPSBmdW5jdGlvbiAoKSB7XG5cblx0cmV0dXJuICQodGhpcy5vcHRpb25zLnRpdG9sSW5wdXRJZCkudmFsKCk7XG5cbn07XG5cblNsaWRlSW5mby5wcm90b3R5cGUuZ2V0RGVzY3JpcGNpbyA9IGZ1bmN0aW9uICgpIHtcblxuXHRyZXR1cm4gJCh0aGlzLm9wdGlvbnMudGV4dElucHV0SWQpLnN1bW1lcm5vdGUoXCJjb2RlXCIpO1xuXG59O1xuXG5TbGlkZUluZm8ucHJvdG90eXBlLnJlc2V0ID0gZnVuY3Rpb24gKCkge1xuXG5cdCQodGhpcy5vcHRpb25zLmlGcmFtZUlkKS5oaWRlKCk7XG5cdCQodGhpcy5vcHRpb25zLm5vVVJMSWQpLnNob3coKTtcblx0JCh0aGlzLm9wdGlvbnMudXJsSW5wdXRJZCkudmFsKFwiXCIpO1xuXHQkKHRoaXMub3B0aW9ucy50aXRvbElucHV0SWQpLnZhbChcIlwiKTtcblx0JCh0aGlzLm9wdGlvbnMudGV4dElucHV0SWQpLnN1bW1lcm5vdGUoXCJjb2RlXCIsIFwiXCIpO1xuXG59O1xuXG5TbGlkZUluZm8ucHJvdG90eXBlLnNldERhdGEgPSBmdW5jdGlvbiAodXJsLCB0aXRvbCwgZGVzY3JpcGNpbykge1xuXG5cdGlmICh1cmwgJiYgdXJsICE9PSBcIlwiKSB7XG5cblx0XHQkKHRoaXMub3B0aW9ucy5pRnJhbWVJZCkuYXR0cihcInNyY1wiLCB1cmwpO1xuXHRcdCQodGhpcy5vcHRpb25zLm5vVVJMSWQpLmhpZGUoKTtcblx0XHQkKHRoaXMub3B0aW9ucy5pRnJhbWVJZCkuc2hvdygpO1xuXG5cdH0gZWxzZSB7XG5cblx0XHQkKHRoaXMub3B0aW9ucy5pRnJhbWVJZCkuaGlkZSgpO1xuXHRcdCQodGhpcy5vcHRpb25zLm5vVVJMSWQpLnNob3coKTtcblxuXHR9XG5cblx0JCh0aGlzLm9wdGlvbnMudXJsSW5wdXRJZCkudmFsKHVybCk7XG5cdCQodGhpcy5vcHRpb25zLnRpdG9sSW5wdXRJZCkudmFsKHRpdG9sKTtcblx0JCh0aGlzLm9wdGlvbnMudGV4dElucHV0SWQpLnN1bW1lcm5vdGUoXCJjb2RlXCIsIGRlc2NyaXBjaW8pO1xuXG59O1xuXG5TbGlkZUluZm8ucHJvdG90eXBlLmNsb3NlID0gZnVuY3Rpb24gKCkge1xuXG5cdCQodGhpcy5vcHRpb25zLmlGcmFtZUNvbnRhaW5lcklkKS5yZW1vdmVDbGFzcyhcImNvbGxhcHNlZFwiKTtcblx0JCh0aGlzLm9wdGlvbnMuaUZyYW1lQ29udGFpbmVySWQpLmFkZENsYXNzKFwiZXhwYW5kZWRcIik7XG5cdCQodGhpcy5vcHRpb25zLmRhdGFDb250YWluZXJJZCkuaGlkZSgpO1xuXG59O1xuXG5TbGlkZUluZm8ucHJvdG90eXBlLm9wZW4gPSBmdW5jdGlvbiAoKSB7XG5cblx0JCh0aGlzLm9wdGlvbnMuaUZyYW1lQ29udGFpbmVySWQpLnJlbW92ZUNsYXNzKFwiZXhwYW5kZWRcIik7XG5cdCQodGhpcy5vcHRpb25zLmlGcmFtZUNvbnRhaW5lcklkKS5hZGRDbGFzcyhcImNvbGxhcHNlZFwiKTtcblx0JCh0aGlzLm9wdGlvbnMuZGF0YUNvbnRhaW5lcklkKS5zaG93KCk7XG5cbn07XG5cblNsaWRlSW5mby5wcm90b3R5cGUuZW5hYmxlU2F2aW5nID0gZnVuY3Rpb24gKHNob3VsZEVuYWJsZSkge1xuXG5cdCQodGhpcy5vcHRpb25zLnNhdmVTbGlkZUJ1dHRvbklkKS5wcm9wKFwiZGlzYWJsZWRcIiwgIXNob3VsZEVuYWJsZSk7XG5cbn07XG4iLCIvKiBnbG9iYWwgJCwgYWxlcnQsIFNsaWRlQmFyLCBTbGlkZUluZm8sIFN0b3J5TWFwU2VydmVyLCBEaWFsb2cqL1xuXG5mdW5jdGlvbiBTdG9yeU1hcChvcHRpb25zKSB7XG5cblx0Y29uc3QgX2RlZmF1bHRPcHRpb25zID0ge1xuXG5cdFx0bGFuZ3VhZ2U6IFwiZW5cIixcblx0XHRtYXhTbGlkZXM6IDEwLFxuXHRcdHN0cmluZ3M6IHtcblx0XHRcdGVuOiB7XG5cdFx0XHRcdG1heFNsaWRlczogXCJNYXhpbXVtIG51bWJlciBvZiBzbGlkZXMgcmVhY2hlZFwiLFxuXHRcdFx0fSxcblx0XHRcdGNhOiB7XG5cdFx0XHRcdG1heFNsaWRlczogXCJNw6B4aW0gbsO6bWVybyBkZSBzbGlkZXMgYXNzb2xpdFwiLFxuXHRcdFx0fSxcblx0XHRcdGVzOiB7XG5cdFx0XHRcdG1heFNsaWRlczogXCJIYXMgbGxlZ2FkbyBhbCBuw7ptZXJvIG3DoXhpbW8gZGUgc2xpZGVzXCIsXG5cdFx0XHR9LFxuXHRcdH0sXG5cblx0fTtcblxuXHR0aGlzLm9wdGlvbnMgPSAkLmV4dGVuZCh0cnVlLCB7fSwgX2RlZmF1bHRPcHRpb25zLCBvcHRpb25zKTtcblxuXHR0aGlzLmN1cnJlbnREZWxldGlvbkluZGV4ID0gLTE7XG5cdHRoaXMuY3VycmVudFNlbGVjdGVkSW5kZXggPSAtMTtcblx0dGhpcy5zbGlkZXMgPSBbXTtcblx0dGhpcy5pZEVkaXRvciA9IFwiXCI7XG5cdHRoaXMuaWRTdG9yeU1hcCA9IFwiXCI7XG5cdHRoaXMuc2xpZGVCYXIgPSBuZXcgU2xpZGVCYXIoKTtcblx0dGhpcy5zbGlkZUluZm9QYW5lbCA9IG5ldyBTbGlkZUluZm8oKTtcblx0dGhpcy5kZWxldGVEaWFsb2cgPSBuZXcgRGlhbG9nKCk7XG5cdHRoaXMuc2VydmVyID0gbmV3IFN0b3J5TWFwU2VydmVyKCk7XG5cblx0dGhpcy5hZGRFdmVudHMoKTtcblx0dGhpcy5fYWRkU2xpZGUoKTtcblxufVxuXG5TdG9yeU1hcC5wcm90b3R5cGUuYWRkRXZlbnRzID0gZnVuY3Rpb24gKCkge1xuXG5cdGNvbnN0IHNlbGYgPSB0aGlzO1xuXG5cdCQoc2VsZi5zbGlkZUluZm9QYW5lbCkub24oXCJTbGlkZUluZm86c2F2ZVNsaWRlUHJlc3NlZFwiLCAoKSA9PiB7XG5cblx0XHRzZWxmLnNhdmVTbGlkZSgpO1xuXG5cdH0pO1xuXG5cdCQoc2VsZi5zbGlkZUJhcikub24oXCJTbGlkZUJhcjpzbGlkZVNlbGVjdGVkXCIsIChldmVudCwgaWQpID0+IHtcblxuXHRcdHRoaXMuY3VycmVudFNlbGVjdGVkSW5kZXggPSBpZDtcblx0XHRzZWxmLl9zbGlkZVNlbGVjdGVkKGlkKTtcblxuXHR9KTtcblxuXHQkKHNlbGYuc2xpZGVCYXIpLm9uKFwiU2xpZGVCYXI6YWRkU2xpZGVQcmVzc2VkXCIsICgpID0+IHtcblxuXHRcdHNlbGYuX2FkZFNsaWRlKCk7XG5cblx0fSk7XG5cblx0JChzZWxmLnNsaWRlQmFyKS5vbihcIlNsaWRlQmFyOmRlbGV0ZVNsaWRlUHJlc3NlZFwiLCAoZXZlbnQsIGlkKSA9PiB7XG5cblx0XHRzZWxmLmN1cnJlbnREZWxldGlvbkluZGV4ID0gaWQ7XG5cdFx0c2VsZi5fc2xpZGVEZWxldGVQcmVzc2VkKGlkKTtcblxuXHR9KTtcblxuXHQkKHNlbGYuZGVsZXRlRGlhbG9nKS5vbihcIkRpYWxvZzphY2NlcHRcIiwgKCkgPT4ge1xuXG5cdFx0c2VsZi5fc2xpZGVEZWxldGVDb25maXJtZWQoKTtcblxuXHRcdGlmICh0aGlzLmN1cnJlbnRTZWxlY3RlZEluZGV4ID09PSB0aGlzLmN1cnJlbnREZWxldGlvbkluZGV4KSB7XG5cblx0XHRcdHRoaXMuc2xpZGVJbmZvUGFuZWwuY2xlYXIoKTtcblxuXHRcdH1cblxuXHRcdHNlbGYuY3VycmVudERlbGV0aW9uSW5kZXggPSAtMTtcblxuXHR9KTtcblxuXHQkKHNlbGYuZGVsZXRlRGlhbG9nKS5vbihcIkRpYWxvZzpjYW5jZWxcIiwgKCkgPT4ge1xuXG5cdFx0c2VsZi5jdXJyZW50RGVsZXRpb25JbmRleCA9IC0xO1xuXG5cdH0pO1xuXG59O1xuXG5TdG9yeU1hcC5wcm90b3R5cGUuc2F2ZVNsaWRlID0gZnVuY3Rpb24gKCkge1xuXG5cdC8vIEFnYWZhciBsZXMgZGFkZXMgZGUgbCdzbGlkZUluZm9QYW5lbCBpIGd1YXJkYXItbGVzIGEgbCdvYmplY3RlIGRlIGwnc2xpZGVcblx0Y29uc3Qgc2xpZGUgPSB7XG5cdFx0aWQ6IHRoaXMuc2xpZGVzLmxlbmd0aCxcblx0XHR1cmxfbWFwYTogdGhpcy5zbGlkZUluZm9QYW5lbC5nZXRVUkwoKSxcblx0XHR0aXRvbDogdGhpcy5zbGlkZUluZm9QYW5lbC5nZXRUaXRvbCgpLFxuXHRcdGRlc2NyaXBjaW86IHRoaXMuc2xpZGVJbmZvUGFuZWwuZ2V0RGVzY3JpcGNpbygpLFxuXHR9O1xuXG5cdHRoaXMuc2xpZGVzLnB1c2goc2xpZGUpO1xuXG5cdC8vIEd1YXJkZW0gbGVzIGRhZGVzIGFsIHNlcnZpZG9yXG5cdHRoaXMuc2F2ZSgpLnRoZW4oKCkgPT4ge1xuXG5cdFx0dGhpcy5zbGlkZUluZm9QYW5lbC5yZXNldCgpO1xuXG5cdH0pO1xuXG59O1xuXG5TdG9yeU1hcC5wcm90b3R5cGUuX2FkZFNsaWRlID0gZnVuY3Rpb24gKCkge1xuXG5cdGNvbnN0IHNlbGYgPSB0aGlzO1xuXG5cdGNvbnN0IGRlZmF1bHREYXRhID0gJC5leHRlbmQodHJ1ZSwge30sIHNlbGYub3B0aW9ucy5zbGlkZURhdGEpO1xuXHRjb25zdCBuID0gc2VsZi5zbGlkZXMubGVuZ3RoO1xuXHRpZiAobiA9PT0gc2VsZi5vcHRpb25zLm1heFNsaWRlcykge1xuXG5cdFx0YWxlcnQoc2VsZi5vcHRpb25zLnN0cmluZ3Nbc2VsZi5vcHRpb25zLmxhbmd1YWdlXS5tYXhTbGlkZXMpO1xuXG5cdH1cdGVsc2Uge1xuXG5cdFx0c2VsZi5zbGlkZXMucHVzaChkZWZhdWx0RGF0YSk7XG5cdFx0dGhpcy5zbGlkZUJhci5hZGRTbGlkZSgpO1xuXHRcdCQoc2VsZikudHJpZ2dlcihcIlN0b3J5TWFwOmNoYW5nZWRcIik7XG5cblx0fVxuXG59O1xuXG5TdG9yeU1hcC5wcm90b3R5cGUuX3NsaWRlU2VsZWN0ZWQgPSBmdW5jdGlvbiAoaW5kZXgpIHtcblxuXHRpZiAodGhpcy5zbGlkZXMgIT0gbnVsbCkge1xuXG5cdFx0Y29uc3QgY3VycmVudFNsaWRlID0gdGhpcy5zbGlkZXNbaW5kZXhdO1xuXHRcdHRoaXMuc2xpZGVJbmZvUGFuZWwuc2V0RGF0YShjdXJyZW50U2xpZGUudXJsX21hcGEsIGN1cnJlbnRTbGlkZS50aXRvbCwgY3VycmVudFNsaWRlLmRlc2NyaXBjaW8pO1xuXHRcdHRoaXMuc2xpZGVJbmZvUGFuZWwub3BlbigpO1xuXG5cdH1cblxufTtcblxuU3RvcnlNYXAucHJvdG90eXBlLl9zbGlkZURlbGV0ZVByZXNzZWQgPSBmdW5jdGlvbiAoaW5kZXgpIHtcblxuXHRjb25zdCBkYXRhID0gdGhpcy5zbGlkZXNbaW5kZXhdO1xuXHRjb25zdCBzbGlkZVRpdGxlID0gKGRhdGEudGl0b2wgfHwgXCIodW50aXRsZWQpXCIpO1xuXG5cdHRoaXMuZGVsZXRlRGlhbG9nLnNldE1lc3NhZ2UoYERlbGV0ZSBcIiR7c2xpZGVUaXRsZX1cIiBzbGlkZT9gKTtcblx0dGhpcy5kZWxldGVEaWFsb2cuc2hvdygpO1xuXG59O1xuXG5TdG9yeU1hcC5wcm90b3R5cGUuc2F2ZSA9IGZ1bmN0aW9uICgpIHtcblxuXHRjb25zdCBkZWZlcnJlZCA9ICQuRGVmZXJyZWQoKTtcblxuXHRpZiAodGhpcy5pZFN0b3J5TWFwICE9PSBcIlwiKSB7XG5cblx0XHRpZiAodGhpcy5pZEVkaXRvciA9PT0gXCJcIikge1xuXG5cdFx0XHQvLyBqYSBleGlzdGVpeCBsJ3N0b3J5bWFwIGNyZWF0LiBFbnRyZW0gZW4gbW9kZSBlZGljacOzXG5cdFx0XHR0aGlzLnNlcnZlci5lZGl0TWFwU2xpZGVzKHRoaXMuaWRTdG9yeU1hcCkudGhlbihmdW5jdGlvbiAocmVzdWx0cykge1xuXG5cdFx0XHRcdHRoaXMuaWRFZGl0b3IgPSByZXN1bHRzLmlkX2VkaXRvcjtcblxuXHRcdFx0XHR0aGlzLnNlcnZlci51cGRhdGVNYXBTbGlkZXModGhpcy5pZEVkaXRvciwgdGhpcy5pZFN0b3J5TWFwLFxuXHRcdFx0XHRcdEpTT04uc3RyaW5naWZ5KHRoaXMuc2xpZGVzKSkudGhlbihcblxuXHRcdFx0XHRcdCgpID0+IHtcblxuXHRcdFx0XHRcdFx0ZGVmZXJyZWQucmVzb2x2ZSgpO1xuXG5cdFx0XHRcdFx0fSxcblx0XHRcdFx0XHQoKSA9PiB7XG5cblx0XHRcdFx0XHRcdGRlZmVycmVkLnJlamVjdCgpO1xuXG5cdFx0XHRcdFx0fSxcblxuXHRcdFx0XHQpO1xuXG5cdFx0XHR9LFxuXHRcdFx0KCkgPT4ge1xuXG5cdFx0XHRcdGRlZmVycmVkLnJlamVjdCgpO1xuXG5cdFx0XHR9KTtcblxuXHRcdH0gZWxzZSB7XG5cblx0XHRcdHRoaXMuc2VydmVyLnVwZGF0ZU1hcFNsaWRlcyh0aGlzLmlkRWRpdG9yLCB0aGlzLmlkU3RvcnlNYXAsIEpTT04uc3RyaW5naWZ5KHRoaXMuc2xpZGVzKSkudGhlbihcblxuXHRcdFx0XHQoKSA9PiB7XG5cblx0XHRcdFx0XHRkZWZlcnJlZC5yZXNvbHZlKCk7XG5cblx0XHRcdFx0fSxcblx0XHRcdFx0KCkgPT4ge1xuXG5cdFx0XHRcdFx0ZGVmZXJyZWQucmVqZWN0KCk7XG5cblx0XHRcdFx0fSxcblxuXHRcdFx0KTtcblxuXHRcdH1cblxuXHR9IGVsc2Uge1xuXG5cdFx0Ly8gbm8gZXhpc3RlaXggbCdzdG9yeW1hcC4gRW4gY3JlZW0gdW4gZGUgbm91IGFtYiBsYSBpbmZvIGNvcnJlc3BvbmVudFxuXHRcdHRoaXMuc2VydmVyLm5ld01hcFNsaWRlcyhKU09OLnN0cmluZ2lmeSh0aGlzLnNsaWRlcykpLnRoZW4oKHJlc3VsdHMpID0+IHtcblxuXHRcdFx0dGhpcy5pZFN0b3J5TWFwID0gcmVzdWx0cy5pZDtcblx0XHRcdHRoaXMuaWRFZGl0b3IgPSByZXN1bHRzLmlkX2VkaXRvcjtcblx0XHRcdGRlZmVycmVkLnJlc29sdmUoKTtcblxuXHRcdH0sXG5cdFx0KCkgPT4ge1xuXG5cdFx0XHRkZWZlcnJlZC5yZWplY3QoKTtcblxuXHRcdH0pO1xuXG5cdH1cblxuXHRyZXR1cm4gZGVmZXJyZWQucHJvbWlzZSgpO1xuXG59O1xuXG5TdG9yeU1hcC5wcm90b3R5cGUubG9hZCA9IGZ1bmN0aW9uIChpZCkge1xuXG5cdHRoaXMuaWRFZGl0b3IgPSBpZDtcblxuXHR0aGlzLnNlcnZlci5lZGl0TWFwU2xpZGVzKGlkKS50aGVuKChyZXN1bHRzKSA9PiB7XG5cblx0XHR0aGlzLnNsaWRlcyA9IEpTT04ucGFyc2UocmVzdWx0cy5zbGlkZXMpO1xuXG5cdH0pO1xuXG59O1xuXG5TdG9yeU1hcC5wcm90b3R5cGUuX3NsaWRlRGVsZXRlQ29uZmlybWVkID0gZnVuY3Rpb24gKCkge1xuXG5cdGNvbnN0IHNlbGYgPSB0aGlzO1xuXG5cdHNlbGYuc2xpZGVzLnNwbGljZSh0aGlzLmN1cnJlbnREZWxldGlvbkluZGV4LCAxKTtcblx0c2VsZi5zbGlkZUJhci5yZW1vdmVTbGlkZSh0aGlzLmN1cnJlbnREZWxldGlvbkluZGV4KTtcblxufTtcbiIsIi8qIGdsb2JhbCAkKi9cblxuZnVuY3Rpb24gU3RvcnlNYXBTZXJ2ZXIob3B0aW9ucykge1xuXG5cdGNvbnN0IF9kZWZhdWx0T3B0aW9ucyA9IHtcblxuXHRcdHVybFN0b3J5TWFwOiBcImh0dHA6Ly8xNzIuNzAuMS4zMi9zdG9yeW1hcHMvXCIsXG5cblx0fTtcblxuXHR0aGlzLm9wdGlvbnMgPSAkLmV4dGVuZCh0cnVlLCB7fSwgX2RlZmF1bHRPcHRpb25zLCBvcHRpb25zKTtcblxufVxuXG5TdG9yeU1hcFNlcnZlci5wcm90b3R5cGUuZ2V0TWFwU2xpZGVzID0gZnVuY3Rpb24gKGlkTWFwYSkge1xuXG5cdC8vIEV4YW1wbGU6IGh0dHA6Ly8xNzIuNzAuMS4zMi9zdG9yeW1hcHMvNzY4ZGRjNjAtNjZlMi0xMWU3LWFmNWUtMDlhZmYwMDcyMzBkXG5cdHJldHVybiAkLmFqYXgoe1xuXG5cdFx0bWV0aG9kOiBcIkdFVFwiLFxuXHRcdHVybDogdGhpcy5vcHRpb25zLnVybFN0b3J5TWFwICsgaWRNYXBhLFxuXG5cdH0pO1xuXG59O1xuXG5TdG9yeU1hcFNlcnZlci5wcm90b3R5cGUuZWRpdE1hcFNsaWRlcyA9IGZ1bmN0aW9uIChpZE1hcGFFZGl0aW5nKSB7XG5cblx0Ly8gRXhhbXBsZTogaHR0cDovLzE3Mi43MC4xLjMyL3N0b3J5bWFwcy9lZGl0Lzc2ZDIxZjAwLTQ4ZTAtNDIxNi1iYjUyLTg0YThhNDFjYzZhMlxuXHRyZXR1cm4gJC5hamF4KHtcblxuXHRcdG1ldGhvZDogXCJHRVRcIixcblx0XHR1cmw6IGAke3RoaXMub3B0aW9ucy51cmxTdG9yeU1hcH1lZGl0LyR7aWRNYXBhRWRpdGluZ31gLFxuXHRcdGFzeW5jOiBmYWxzZSxcblxuXHR9KS5yZXNwb25zZVRleHQ7XG5cbn07XG5TdG9yeU1hcFNlcnZlci5wcm90b3R5cGUubmV3TWFwU2xpZGVzID0gZnVuY3Rpb24gKGpzb25TbGlkZXMpIHtcblxuXHQvLyBodHRwOi8vMTcyLjcwLjEuMzIvc3RvcnltYXBzL2VkaXQvXG5cdHJldHVybiAkLmFqYXgoe1xuXG5cdFx0bWV0aG9kOiBcIlBPU1RcIixcblx0XHR1cmw6IGAke3RoaXMub3B0aW9ucy51cmxTdG9yeU1hcH1lZGl0L2AsXG5cdFx0ZGF0YVR5cGU6IFwianNvblwiLFxuXHRcdGRhdGE6IHsgaWQ6IDAsIGlkX2VkaXRvcjogMCwgc2xpZGVzOiBqc29uU2xpZGVzIH0sXG5cblx0fSk7XG5cbn07XG5cblxuU3RvcnlNYXBTZXJ2ZXIucHJvdG90eXBlLnVwZGF0ZU1hcFNsaWRlcyA9IGZ1bmN0aW9uIChpZE1hcGFFZGl0aW5nLCBpZE1hcGEsIGpzb25TbGlkZXMpIHtcblxuXHRyZXR1cm4gJC5hamF4KHtcblxuXHRcdG1ldGhvZDogXCJQVVRcIixcblx0XHR1cmw6IGAke3RoaXMub3B0aW9ucy51cmxTdG9yeU1hcH1lZGl0LyR7aWRNYXBhRWRpdGluZ31gLFxuXHRcdGRhdGFUeXBlOiBcImpzb25cIixcblx0XHRkYXRhOiB7IGlkOiBpZE1hcGEsIGlkX2VkaXRvcjogaWRNYXBhRWRpdGluZywgc2xpZGVzOiBqc29uU2xpZGVzIH0sXG5cblx0fSk7XG5cbn07XG5cblN0b3J5TWFwU2VydmVyLnByb3RvdHlwZS5kZWxldGVNYXBTbGlkZXMgPSBmdW5jdGlvbiAoaWRNYXBhRWRpdGluZywgaWRNYXBhKSB7XG5cblx0JC5hamF4KHtcblxuXHRcdG1ldGhvZDogXCJERUxFVEVcIixcblx0XHR1cmw6IGAke3RoaXMub3B0aW9ucy51cmxTdG9yeU1hcH1lZGl0LyR7aWRNYXBhRWRpdGluZ30vJHtpZE1hcGF9YCxcblx0XHRjb250ZW50VHlwZTogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG5cblx0fSlcblx0XHQuZG9uZSgoKSA9PiB7XG5cblx0XHR9KTtcblxufTtcbiIsIi8qIGV4cG9ydGVkIFV0aWxzICovXG5jb25zdCBVdGlscyA9IHtcblxuXHRpc1ZhbGlkVVJMKHVybCkge1xuXG5cdFx0Y29uc3QgZXhwcmVzc2lvbiA9IC9odHRwcz86XFwvXFwvKHd3d1xcLik/Wy1hLXpBLVowLTlAOiUuX1xcXFwrfiM9XXsyLDI1Nn1cXC5bYS16XXsyLDZ9XFxiKFstYS16QS1aMC05QDolX1xcXFwrLn4jPyYvLz1dKikvZ2k7XG5cdFx0Y29uc3QgcmVnZXggPSBuZXcgUmVnRXhwKGV4cHJlc3Npb24pO1xuXG5cdFx0cmV0dXJuIHJlZ2V4LnRlc3QodXJsKTtcblxuXHR9LFxuXG5cdGlzTm90RW1wdHkodGV4dCkge1xuXG5cdFx0cmV0dXJuICh0ZXh0LnRyaW0oKSAhPT0gXCJcIik7XG5cblx0fSxcblxufTtcbiJdfQ==
